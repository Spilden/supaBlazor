@page "/login"
@using System.ComponentModel.DataAnnotations;
@inject AuthService AuthService
@inject NavigationManager NavMng

<h3>Login</h3>
@if (!string.IsNullOrEmpty(errorMessage))
{
    <div class="alert alert-danger">@errorMessage</div>
}

<EditForm Model="userLogin" OnValidSubmit="HandleLogin">
    <DataAnnotationsValidator />
    <ValidationSummary />
    <div>
        <label class="form-label">Username</label>
        <InputText id="username" class="form-control" @bind-Value="userLogin.Username" />
    </div>
    <div>
        <label class="form-label">Password</label>
        <InputText id="password" type="password" class="form-control" @bind-Value="userLogin.Password" />
    </div>
    <button type="submit" class="btn btn-primary">Login</button>
</EditForm>

@code {

    protected override async Task OnInitializedAsync(){
        if(await AuthService.IsAuthenticated()){
            NavMng.NavigateTo("/");
        }
    }
    private UserLogin userLogin = new UserLogin();
    private string errorMessage;

    private async Task HandleLogin()
    {
        var success = await AuthService.Login(userLogin.Username, userLogin.Password);
        if (success)
        {
            NavMng.NavigateTo("/");
        }
        else
        {
            errorMessage = "Unknown username or password, please try again";
        }
    }
    private class UserLogin
    {
        [Required(ErrorMessage = "Username required!")]
        [StringLength(20, ErrorMessage = "Username must be less than 20 characters")]
        public string Username { get; set; }

        [Required(ErrorMessage = "Password required!")]
        public string Password { get; set; }
    }
}